#
# Module manifest for PowerShell-Common
# Enterprise-grade PowerShell module for Lolita Fashion project
#
# Generated by: Senior DevOps Engineer
# Generated on: 2025-08-24
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'PowerShell-Common.psm1'

# Version number of this module.
ModuleVersion = '2.1.0'

# Supported PSEditions
CompatiblePSEditions = @('Desktop', 'Core')

# ID used to uniquely identify this module
GUID = '3f4a5d6e-7b8c-9d0e-1f2a-3b4c5d6e7f8g'

# Author of this module
Author = 'Senior DevOps Engineer'

# Company or vendor of this module
CompanyName = 'Lolita Fashion'

# Copyright statement for this module
Copyright = '(c) 2025 Lolita Fashion. All rights reserved.'

# Description of the functionality provided by this module
Description = 'Enterprise-grade PowerShell utilities for Lolita Fashion Windows development environment. Provides safe output functions, service management, network testing, and environment initialization with full Unicode compatibility and error handling.'

# Minimum version of the PowerShell engine required by this module
PowerShellVersion = '3.0'

# Name of the PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
DotNetFrameworkVersion = '4.5'

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
ProcessorArchitecture = 'None'

# Modules that must be imported into the global environment prior to importing this module
RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
NestedModules = @()

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @(
    'Write-SafeOutput',
    'Write-SafeHeader', 
    'Write-SafeSectionHeader',
    'Test-PowerShellCompatibility',
    'Invoke-SafeCommand',
    'Initialize-SafeEnvironment', 
    'Get-ProjectRoot',
    'Test-ServiceSafely',
    'Start-ServiceSafely',
    'Test-NetworkPortSafely',
    'Test-PathSafely'
)

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = @()

# Variables to export from this module
VariablesToExport = @(
    'STATUS_SUCCESS',
    'STATUS_ERROR', 
    'STATUS_WARNING',
    'STATUS_INFO',
    'STATUS_PROCESSING',
    'STATUS_COMPLETE',
    'STATUS_SKIPPED'
)

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = @()

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
ModuleList = @('PowerShell-Common')

# List of all files packaged with this module
FileList = @(
    'PowerShell-Common.psm1',
    'PowerShell-Common.psd1'
)

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @('Windows', 'Enterprise', 'PowerShell', 'Utilities', 'Lolita', 'Fashion', 'DevOps', 'Safe', 'Unicode', 'Logging')

        # A URL to the license for this module.
        # LicenseUri = ''

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/lolita-fashion/yuyu-lolita'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = @"
# PowerShell-Common Module v2.1.0 - Enterprise Edition

## New Features
- Full PowerShell module architecture with proper exports
- Enhanced error handling and compatibility checking
- Safe Unicode output functions with ASCII fallback
- Enterprise-grade service and network management
- Comprehensive environment initialization
- Cross-compatible with PowerShell Desktop and Core

## Breaking Changes
- Migrated from script-based to module-based architecture
- Export-ModuleMember issues resolved with explicit function exports
- Improved hybrid import system for backward compatibility

## Bug Fixes
- Fixed Export-ModuleMember error when dot-sourcing
- Resolved encoding issues on various Windows systems
- Enhanced compatibility with Windows PowerShell 3.0+

## Security Improvements  
- Added validation for PowerShell execution policies
- Improved error handling for administrative operations
- Enhanced input validation and sanitization

## Performance
- Optimized module loading and function resolution
- Reduced memory footprint through better resource management
- Improved startup time with lazy initialization
"@

        # Prerelease string of this module
        # Prerelease = ''

        # Flag to indicate whether the module requires explicit user acceptance for install/update/save
        RequireLicenseAcceptance = $false

        # External dependent modules of this module
        # ExternalModuleDependencies = @()

    } # End of PSData hashtable

} # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}