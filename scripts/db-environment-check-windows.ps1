# ================================
# MySQL8 Environment Checker for Windows
# YuYu Lolita Shopping System
# ================================

[CmdletBinding()]
param(
    [switch]$Verbose = $false,
    [switch]$Fix = $false
)

# Import common functions
. "$PSScriptRoot\PowerShell-Common.ps1"

function Test-MySQLService {
    Write-Host "üîç [CHECK] –ü—Ä–æ–≤–µ—Ä—è—é —Å–ª—É–∂–±—É MySQL80..." -ForegroundColor Cyan
    
    $mysqlService = Get-Service -Name "MySQL80" -ErrorAction SilentlyContinue
    
    if (-not $mysqlService) {
        Write-Host "‚ùå [ERROR] –°–ª—É–∂–±–∞ MySQL80 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
        Write-Host "üí° [SOLUTION] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MySQL 8.0 –∏–∑: https://dev.mysql.com/downloads/mysql/" -ForegroundColor Yellow
        return $false
    }
    
    if ($mysqlService.Status -ne "Running") {
        Write-Host "‚ö†Ô∏è [WARNING] –°–ª—É–∂–±–∞ MySQL80 –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞. –°—Ç–∞—Ç—É—Å: $($mysqlService.Status)" -ForegroundColor Yellow
        
        if ($Fix) {
            Write-Host "üîß [FIX] –ü—ã—Ç–∞—é—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É MySQL80..." -ForegroundColor Green
            try {
                Start-Service -Name "MySQL80"
                Start-Sleep -Seconds 3
                $mysqlService = Get-Service -Name "MySQL80"
                if ($mysqlService.Status -eq "Running") {
                    Write-Host "‚úÖ [SUCCESS] –°–ª—É–∂–±–∞ MySQL80 —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!" -ForegroundColor Green
                    return $true
                }
            }
            catch {
                Write-Host "‚ùå [ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É MySQL80: $_" -ForegroundColor Red
                return $false
            }
        } else {
            Write-Host "üí° [SOLUTION] –ó–∞–ø—É—Å—Ç–∏—Ç–µ: Start-Service -Name 'MySQL80'" -ForegroundColor Yellow
            return $false
        }
    }
    
    Write-Host "‚úÖ [SUCCESS] –°–ª—É–∂–±–∞ MySQL80 —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor Green
    return $true
}

function Test-MySQLPort {
    Write-Host "üîç [CHECK] –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 3306..." -ForegroundColor Cyan
    
    try {
        $connection = Test-NetConnection -ComputerName "localhost" -Port 3306 -InformationLevel Quiet
        if ($connection) {
            Write-Host "‚úÖ [SUCCESS] –ü–æ—Ä—Ç 3306 –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå [ERROR] –ü–æ—Ä—Ç 3306 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!" -ForegroundColor Red
            Write-Host "üí° [SOLUTION] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MySQL –∏ firewall" -ForegroundColor Yellow
            return $false
        }
    }
    catch {
        Write-Host "‚ùå [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Ä—Ç–∞ 3306: $_" -ForegroundColor Red
        return $false
    }
}

function Test-EnvFile {
    Write-Host "üîç [CHECK] –ü—Ä–æ–≤–µ—Ä—è—é —Ñ–∞–π–ª .env..." -ForegroundColor Cyan
    
    $envPath = Join-Path $PSScriptRoot "..\.env"
    
    if (-not (Test-Path $envPath)) {
        Write-Host "‚ùå [ERROR] –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
        
        if ($Fix) {
            Write-Host "üîß [FIX] –ö–æ–ø–∏—Ä—É—é .env.example –≤ .env..." -ForegroundColor Green
            $envExamplePath = Join-Path $PSScriptRoot "..\.env.example"
            if (Test-Path $envExamplePath) {
                Copy-Item $envExamplePath $envPath
                Write-Host "‚úÖ [SUCCESS] –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞" -ForegroundColor Green
                Write-Host "‚ö†Ô∏è [WARNING] –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å DB_PASSWORD –≤ .env!" -ForegroundColor Yellow
            } else {
                Write-Host "‚ùå [ERROR] –®–∞–±–ª–æ–Ω .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
                return $false
            }
        } else {
            Write-Host "üí° [SOLUTION] –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ë–î" -ForegroundColor Yellow
            return $false
        }
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    $envContent = Get-Content $envPath -Raw
    $requiredVars = @("DB_HOST", "DB_PORT", "DB_NAME", "DB_USER", "DB_PASSWORD")
    $missingVars = @()
    
    foreach ($var in $requiredVars) {
        if (-not ($envContent -match "$var\s*=\s*.+")) {
            $missingVars += $var
        }
    }
    
    if ($missingVars.Count -gt 0) {
        Write-Host "‚ùå [ERROR] –í —Ñ–∞–π–ª–µ .env –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –ø—É—Å—Ç—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: $($missingVars -join ', ')" -ForegroundColor Red
        Write-Host "üí° [SOLUTION] –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ–∞–π–ª–µ .env" -ForegroundColor Yellow
        return $false
    }
    
    Write-Host "‚úÖ [SUCCESS] –§–∞–π–ª .env —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã" -ForegroundColor Green
    return $true
}

function Test-MySQLConnection {
    Write-Host "üîç [CHECK] –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL..." -ForegroundColor Cyan
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    $envPath = Join-Path $PSScriptRoot "..\.env"
    if (Test-Path $envPath) {
        $envVars = @{}
        Get-Content $envPath | ForEach-Object {
            if ($_ -match '^([^#][^=]+)=(.*)$') {
                $envVars[$matches[1].Trim()] = $matches[2].Trim()
            }
        }
    } else {
        Write-Host "‚ùå [ERROR] –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!" -ForegroundColor Red
        return $false
    }
    
    $dbHost = $envVars["DB_HOST"] ?? "localhost"
    $dbPort = $envVars["DB_PORT"] ?? "3306"
    $dbUser = $envVars["DB_USER"] ?? "root"
    $dbPassword = $envVars["DB_PASSWORD"] ?? ""
    
    if ([string]::IsNullOrEmpty($dbPassword)) {
        Write-Host "‚ùå [ERROR] DB_PASSWORD –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ!" -ForegroundColor Red
        Write-Host "üí° [SOLUTION] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ DB_PASSWORD –≤ —Ñ–∞–π–ª–µ .env" -ForegroundColor Yellow
        return $false
    }
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ mysql.exe
    $mysqlPath = Get-Command mysql -ErrorAction SilentlyContinue
    if ($mysqlPath) {
        try {
            $testQuery = "SELECT 1;"
            $result = & mysql -h $dbHost -P $dbPort -u $dbUser -p$dbPassword -e $testQuery --silent 2>$null
            if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ [SUCCESS] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" -ForegroundColor Green
                return $true
            } else {
                Write-Host "‚ùå [ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MySQL" -ForegroundColor Red
                Write-Host "üí° [SOLUTION] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å MySQL" -ForegroundColor Yellow
                return $false
            }
        }
        catch {
            Write-Host "‚ùå [ERROR] –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL: $_" -ForegroundColor Red
            return $false
        }
    } else {
        Write-Host "‚ö†Ô∏è [WARNING] –ö–ª–∏–µ–Ω—Ç mysql.exe –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH" -ForegroundColor Yellow
        Write-Host "üí° [INFO] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞" -ForegroundColor Yellow
        return $true
    }
}

function Test-DatabaseExists {
    param([string]$DatabaseName = "yuyu_lolita")
    
    Write-Host "üîç [CHECK] –ü—Ä–æ–≤–µ—Ä—è—é —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö '$DatabaseName'..." -ForegroundColor Cyan
    
    $envPath = Join-Path $PSScriptRoot "..\.env"
    if (-not (Test-Path $envPath)) {
        Write-Host "‚ùå [ERROR] –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
        return $false
    }
    
    $envVars = @{}
    Get-Content $envPath | ForEach-Object {
        if ($_ -match '^([^#][^=]+)=(.*)$') {
            $envVars[$matches[1].Trim()] = $matches[2].Trim()
        }
    }
    
    $dbHost = $envVars["DB_HOST"] ?? "localhost"
    $dbPort = $envVars["DB_PORT"] ?? "3306"
    $dbUser = $envVars["DB_USER"] ?? "root"
    $dbPassword = $envVars["DB_PASSWORD"] ?? ""
    
    $mysqlPath = Get-Command mysql -ErrorAction SilentlyContinue
    if ($mysqlPath) {
        try {
            $testQuery = "SHOW DATABASES LIKE '$DatabaseName';"
            $result = & mysql -h $dbHost -P $dbPort -u $dbUser -p$dbPassword -e $testQuery --silent 2>$null
            if ($LASTEXITCODE -eq 0 -and $result -like "*$DatabaseName*") {
                Write-Host "‚úÖ [SUCCESS] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '$DatabaseName' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
                return $true
            } else {
                Write-Host "‚ö†Ô∏è [WARNING] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '$DatabaseName' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
                return $false
            }
        }
        catch {
            Write-Host "‚ùå [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: $_" -ForegroundColor Red
            return $false
        }
    } else {
        Write-Host "‚ö†Ô∏è [WARNING] –ö–ª–∏–µ–Ω—Ç mysql.exe –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –ë–î" -ForegroundColor Yellow
        return $true
    }
}

# ================================
# MAIN EXECUTION
# ================================

Write-Host ""
Write-Host "üöÄ =====================================" -ForegroundColor Magenta
Write-Host "üöÄ MySQL8 Environment Checker (Windows)" -ForegroundColor Magenta
Write-Host "üöÄ YuYu Lolita Shopping System" -ForegroundColor Magenta
Write-Host "üöÄ =====================================" -ForegroundColor Magenta
Write-Host ""

$allChecks = @()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª—É–∂–±—ã MySQL
$allChecks += Test-MySQLService

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
$allChecks += Test-MySQLPort

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
$allChecks += Test-EnvFile

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL
$allChecks += Test-MySQLConnection

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ë–î
$allChecks += Test-DatabaseExists

# –ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
Write-Host ""
Write-Host "üìä =====================================" -ForegroundColor Magenta
Write-Host "üìä –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò –û–ö–†–£–ñ–ï–ù–ò–Ø" -ForegroundColor Magenta
Write-Host "üìä =====================================" -ForegroundColor Magenta

$passedChecks = ($allChecks | Where-Object { $_ -eq $true }).Count
$totalChecks = $allChecks.Count

Write-Host "‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $passedChecks –∏–∑ $totalChecks" -ForegroundColor Green

if ($passedChecks -eq $totalChecks) {
    Write-Host "üéâ [SUCCESS] –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –û–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ." -ForegroundColor Green
    Write-Host "üí° [NEXT] –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run db:setup:windows –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î" -ForegroundColor Yellow
    exit 0
} else {
    Write-Host "‚ùå [ERROR] –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã." -ForegroundColor Red
    if (-not $Fix) {
        Write-Host "üí° [TIP] –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º -Fix –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è" -ForegroundColor Yellow
    }
    exit 1
}