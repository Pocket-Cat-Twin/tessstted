const fs = require('fs');
const postgres = require('postgres');

async function testFixedMigration() {
  console.log('üîß –¢–ï–°–¢–ò–†–£–ï–ú –ò–°–ü–†–ê–í–õ–ï–ù–ù–£–Æ –ú–ò–ì–†–ê–¶–ò–Æ');
  console.log('üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ "—Å–∏–Ω—Ç–∞–∫—Å–∏—Å (–ø—Ä–∏–º–µ—Ä–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ: $)"');

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –ë–î
  const adminSql = postgres({
    host: '/var/run/postgresql',
    database: 'template1',
    username: 'postgres',
  });

  let testSql;

  try {
    console.log('\nüóëÔ∏è –®–∞–≥ 1: –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ë–î –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞...');
    try {
      await adminSql`DROP DATABASE IF EXISTS yuyu_lolita_test`;
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ë–î —É–¥–∞–ª–µ–Ω–∞');
    } catch (e) {
      console.log('‚ö†Ô∏è –ë–î –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∞');
    }

    console.log('üÜï –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–µ—Å—Ç–æ–≤—É—é –ë–î...');
    await adminSql`CREATE DATABASE yuyu_lolita_test`;
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ë–î —Å–æ–∑–¥–∞–Ω–∞');

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω—Å–∫–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await adminSql.end();

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î
    testSql = postgres({
      host: '/var/run/postgresql',
      database: 'yuyu_lolita_test',
      username: 'postgres',
    });

    console.log('üîó –®–∞–≥ 3: –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î...');
    await testSql`SELECT 1`;
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î —É—Å–ø–µ—à–Ω–æ');

    console.log('üìñ –®–∞–≥ 4: –ß–∏—Ç–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é...');
    const migrationContent = fs.readFileSync('./migrations/0000_consolidated_schema.sql', 'utf8');
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', Math.round(migrationContent.length / 1024), 'KB');

    console.log('üöÄ –®–∞–≥ 5: –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é...');
    console.log('   (–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ —Å $)');
    
    const startTime = Date.now();
    await testSql.unsafe(migrationContent);
    const duration = Date.now() - startTime;
    
    console.log('‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–ê –£–°–ü–ï–®–ù–û! (', duration, 'ms)');
    console.log('‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Å $ –ò–°–ü–†–ê–í–õ–ï–ù–´!');

    console.log('\nüîç –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é cleanup_expired_verification_tokens
    const func1Check = await testSql`
      SELECT proname FROM pg_proc WHERE proname = 'cleanup_expired_verification_tokens'
    `;
    console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è cleanup_expired_verification_tokens:', func1Check.length > 0 ? '–°–û–ó–î–ê–ù–ê' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é update_updated_at_column
    const func2Check = await testSql`
      SELECT proname FROM pg_proc WHERE proname = 'update_updated_at_column'
    `;
    console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è update_updated_at_column:', func2Check.length > 0 ? '–°–û–ó–î–ê–ù–ê' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê');

    console.log('\nüìä –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –∫–æ–ª–æ–Ω–∫—É
    const columnCheck = await testSql`
      SELECT 1 FROM information_schema.columns 
      WHERE table_name = 'users' AND column_name = 'overall_verification_status'
    `;
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ overall_verification_status:', columnCheck.length > 0 ? '–°–û–ó–î–ê–ù–ê' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê');

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    const tablesCount = await testSql`
      SELECT COUNT(*) as count FROM information_schema.tables 
      WHERE table_schema = 'public' AND table_type = 'BASE TABLE'
    `;
    console.log('üìà –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü —Å–æ–∑–¥–∞–Ω–æ:', tablesCount[0].count);

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    const functionsCount = await testSql`
      SELECT COUNT(*) as count FROM pg_proc 
      WHERE pronamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public')
      AND prokind = 'f'
    `;
    console.log('üìà –í—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π —Å–æ–∑–¥–∞–Ω–æ:', functionsCount[0].count);

    console.log('\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:');
    console.log('===============================================');
    console.log('‚úÖ –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò –° $ –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–´!');
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫');
    console.log('‚úÖ PostgreSQL —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ë–î –Ω–∞ –º–µ—Å—Ç–µ');
    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ –¥–ª—è production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!');

  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò:');
    console.error('   –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    
    if (error.message.includes('syntax error') && error.message.includes('$')) {
      console.error('üö® –í–ù–ò–ú–ê–ù–ò–ï: –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Å $ –≤—Å–µ –µ—â–µ –µ—Å—Ç—å!');
      console.error('   –ü—Ä–æ–±–ª–µ–º–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ:', error.position);
    } else if (error.message.includes('syntax error')) {
      console.error('‚ö†Ô∏è –ï—Å—Ç—å –¥—Ä—É–≥–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏');
    }
    
    throw error;
  } finally {
    if (testSql) {
      await testSql.end();
    }
  }
}

testFixedMigration();