// –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// YuYu Lolita Shopping System - –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
import * as bcrypt from "bcryptjs";
import { writeFileSync, existsSync, appendFileSync } from "fs";
import { join } from "path";
import { getPool } from "./connection.js";
import { getUserByEmail } from "./query-builders.js";

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏
export const USER_GENERATION_CONSTANTS = {
  ADMIN_EMAIL: "admin@yuyulolita.com",
  ADMIN_NAME: "admin",
  ADMIN_FULL_NAME: "–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
  BCRYPT_ROUNDS: 12, // –ò–∑ config/windows.json
  PASSWORD_LENGTH: 16,
  CREDENTIALS_FILE: "credentials.txt"
} as const;

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface UserCreationData {
  email: string;
  password: string;
  role: 'admin' | 'user';
  name: string;
  fullName?: string;
  method: 'seeding' | 'api' | 'migration' | 'manual';
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ credentials.txt
export interface CredentialsEntry {
  timestamp: string;
  email: string;
  password: string; // –ù–ï–®–ò–§–†–û–í–ê–ù–ù–´–ô –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  role: string;
  method: string;
  name: string;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –ø—Ä–æ–µ–∫—Ç–∞
 * @param length –î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 16)
 * @returns –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
 */
export function generateSecurePassword(length: number = USER_GENERATION_CONSTANTS.PASSWORD_LENGTH): string {
  const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
  let password = '';
  
  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º –ø–æ –æ–¥–Ω–æ–º—É —Å–∏–º–≤–æ–ª—É –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
  password += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random() * 26)]; // –∑–∞–≥–ª–∞–≤–Ω–∞—è
  password += 'abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random() * 26)]; // —Å—Ç—Ä–æ—á–Ω–∞—è
  password += '0123456789'[Math.floor(Math.random() * 10)]; // —Ü–∏—Ñ—Ä–∞
  password += '!@#$%^&*'[Math.floor(Math.random() * 8)]; // —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–ª—É—á–∞–π–Ω–æ
  for (let i = 4; i < length; i++) {
    password += charset[Math.floor(Math.random() * charset.length)];
  }
  
  // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
  return password.split('').sort(() => Math.random() - 0.5).join('');
}

/**
 * –•—ç—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º bcrypt
 * @param password –ù–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
 * @returns –•—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
 */
export async function hashPassword(password: string): Promise<string> {
  return await bcrypt.hash(password, USER_GENERATION_CONSTANTS.BCRYPT_ROUNDS);
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ credentials.txt
 * @param entry –ó–∞–ø–∏—Å—å —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */
export function saveCredentials(entry: CredentialsEntry): void {
  const credentialsPath = join(process.cwd(), USER_GENERATION_CONSTANTS.CREDENTIALS_FILE);
  
  // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!existsSync(credentialsPath)) {
    const header = "# YuYu Lolita Shopping System - User Credentials\n" +
                   "# –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏!\n" +
                   "# –î–µ—Ä–∂–∏—Ç–µ –µ–≥–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ –≤ git\n" +
                   "# Format: TIMESTAMP | EMAIL | PASSWORD | ROLE | METHOD | NAME\n\n";
    writeFileSync(credentialsPath, header, 'utf8');
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –∑–∞–ø–∏—Å–∏
  const logEntry = `${entry.timestamp} | ${entry.email} | ${entry.password} | ${entry.role} | ${entry.method} | ${entry.name}\n`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
  appendFileSync(credentialsPath, logEntry, 'utf8');
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * @param userData –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns Promise<boolean> –£—Å–ø–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
export async function createUserWithCredentialsSave(userData: UserCreationData): Promise<boolean> {
  const pool = await getPool();
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existing = await getUserByEmail(userData.email);
    if (existing) {
      console.log(`‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
      return false;
    }
    
    // –•—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const hashedPassword = await hashPassword(userData.password);
    const userName = userData.name || userData.email.split('@')[0] || 'user';
    const userFullName = userData.fullName || userName;
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await pool.execute(`
      INSERT INTO users (
        id, email, password_hash, name, full_name, registration_method, 
        role, status, email_verified, created_at, updated_at
      ) VALUES (UUID(), ?, ?, ?, ?, 'email', ?, 'active', true, NOW(), NOW())
    `, [userData.email, hashedPassword, userName, userFullName, userData.role]);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ credentials.txt
    const credentialsEntry: CredentialsEntry = {
      timestamp: new Date().toISOString(),
      email: userData.email,
      password: userData.password, // –ù–ï–®–ò–§–†–û–í–ê–ù–ù–´–ô –ø–∞—Ä–æ–ª—å!
      role: userData.role,
      method: userData.method,
      name: userName
    };
    
    saveCredentials(credentialsEntry);
    
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ (—Ä–æ–ª—å: ${userData.role})`);
    console.log(`üìù –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${USER_GENERATION_CONSTANTS.CREDENTIALS_FILE}`);
    
    return true;
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email}:`, error);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
 * @param method –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è (–¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
 * @returns Promise<string> –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
 */
export async function createAdminUser(method: UserCreationData['method'] = 'seeding'): Promise<string> {
  const adminPassword = generateSecurePassword();
  
  const success = await createUserWithCredentialsSave({
    email: USER_GENERATION_CONSTANTS.ADMIN_EMAIL,
    password: adminPassword,
    role: 'admin',
    name: USER_GENERATION_CONSTANTS.ADMIN_NAME,
    fullName: USER_GENERATION_CONSTANTS.ADMIN_FULL_NAME,
    method: method
  });
  
  if (!success) {
    throw new Error('Failed to create admin user');
  }
  
  return adminPassword;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param email Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param name –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param password –ü–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
 * @param method –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è
 * @returns Promise<string> –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function createTestUser(
  email: string, 
  name: string, 
  password?: string, 
  method: UserCreationData['method'] = 'seeding'
): Promise<string> {
  const userPassword = password || generateSecurePassword();
  
  const success = await createUserWithCredentialsSave({
    email: email,
    password: userPassword,
    role: 'user',
    name: name,
    fullName: `–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${name}`,
    method: method
  });
  
  if (!success) {
    throw new Error(`Failed to create test user ${email}`);
  }
  
  return userPassword;
}

/**
 * –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
export function displayCredentialsInfo(): void {
  console.log('');
  console.log('üîê ========================================');
  console.log('üîê –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –°–û–•–†–ê–ù–ï–ù–´');
  console.log('üîê ========================================');
  console.log(`üìù –§–∞–π–ª: ${USER_GENERATION_CONSTANTS.CREDENTIALS_FILE}`);
  console.log('üîê –°–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏!');
  console.log('üîí –î–µ—Ä–∂–∏—Ç–µ —Ñ–∞–π–ª –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
  console.log('‚ö†Ô∏è  –ù–ï –∫–æ–º–º–∏—Ç—å—Ç–µ –µ–≥–æ –≤ git');
  console.log('üîê ========================================');
  console.log('');
}