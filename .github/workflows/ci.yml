name: 🔧 Lolita Fashion - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 🔍 NAMESPACE VALIDATION (Critical)
  namespace-check:
    name: 🔍 Namespace Consistency Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for @yuyu namespace usage
        run: |
          if grep -r "@yuyu/" apps/ packages/ --include="*.ts" --include="*.js" --include="*.svelte" 2>/dev/null; then
            echo "❌ Found @yuyu/ imports! Use @lolita-fashion/ instead"
            echo "Files with issues:"
            grep -r "@yuyu/" apps/ packages/ --include="*.ts" --include="*.js" --include="*.svelte" -l 2>/dev/null || true
            exit 1
          else
            echo "✅ All imports use correct @lolita-fashion/ namespace"
          fi

  # 📦 BUILD VALIDATION
  build-validation:
    name: 📦 Build & Type Check Validation
    runs-on: ubuntu-latest
    needs: namespace-check
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: Build shared packages
        run: |
          cd packages/shared && bun run build
          cd ../db && bun run build
          
      - name: 🔧 TypeScript Type Checking
        run: bun run type-check
        
      - name: 📱 Build Web App
        run: cd apps/web && bun run build
        
      - name: 🚀 Build API
        run: cd apps/api && bun run build
        
      - name: ✅ Verify Build Artifacts
        run: |
          echo "🔍 Checking build outputs..."
          ls -la apps/web/.svelte-kit/output/ || echo "⚠️ Web build output not found"
          ls -la apps/api/dist/ || echo "⚠️ API build output not found"

  # 🧪 CODE QUALITY CHECKS  
  quality-checks:
    name: 🧪 Code Quality & Security
    runs-on: ubuntu-latest
    needs: namespace-check
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: 🎨 Code Formatting Check
        run: |
          bun run format
          if [[ -n $(git status --porcelain) ]]; then
            echo "❌ Code formatting issues found. Run 'bun run format' locally."
            git diff
            exit 1
          else
            echo "✅ Code formatting is correct"
          fi
          
      - name: 🔒 Security Audit
        run: bun audit --audit-level moderate || echo "⚠️ Security audit completed with warnings"

  # 🎯 DEPLOYMENT READINESS
  deployment-check:
    name: 🎯 Deployment Readiness
    runs-on: ubuntu-latest
    needs: [build-validation, quality-checks]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: Build shared packages
        run: |
          cd packages/shared && bun run build
          cd ../db && bun run build
          
      - name: 🏗️ Production Build Test
        env:
          NODE_ENV: production
        run: |
          cd apps/web && bun run build
          cd ../api && bun run build
          echo "✅ Production build successful"
          
      - name: 📊 Bundle Size Analysis
        run: |
          echo "📊 Web App Bundle Analysis:"
          du -sh apps/web/.svelte-kit/output/client/_app/immutable/ || echo "No client bundles found"
          echo ""
          echo "📊 API Bundle Analysis:" 
          du -sh apps/api/dist/ || echo "No API build found"

  # ✅ SUCCESS SUMMARY
  success:
    name: ✅ All Checks Passed
    runs-on: ubuntu-latest
    needs: [namespace-check, build-validation, quality-checks]
    if: success()
    
    steps:
      - name: 🎉 Success Notification
        run: |
          echo "🎉 All CI checks passed successfully!"
          echo "✅ Namespace consistency verified"
          echo "✅ Builds completed without errors"  
          echo "✅ Type checking passed"
          echo "✅ Code quality validated"
          echo ""
          echo "🚀 Ready for deployment!"